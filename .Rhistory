homes <- read.csv("homes2004.csv")
homes <- read.csv("homes2004.csv")
##### ******** Mortgage and Home Sales Data ******** #####
head(homes)
pricey <- glm(log(VALUE) ~ .-AMMORT-LPRICE, data=homes)
pvals <- summary(pricey)$coef[-1,4]
names(pvals)[pvals>.2]
pricey
fdr_cut <- function(pvals, q, plotit=FALSE){
pvals <- pvals[!is.na(pvals)]
N <- length(pvals)
k <- rank(pvals, ties.method="min")
alpha <- max(pvals[ pvals<= (q*k/N) ])
if(plotit){
sig <- factor(pvals<=alpha)
o <- order(pvals)
plot(pvals[o], log="xy", col=c("grey60","red")[sig[o]], pch=20,
ylab="p-values", xlab="tests ordered by p-value", main = paste('FDR =',q))
lines(1:N, q*(1:N)/N)
}
return(alpha)
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
names(pvals)[pvals>.2]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Eddie/Google Drive/Academics/Big Data/2/HW2/homes_start.R')
plot(log(VALUE) ~ HHGRAD, data=homes)
plot(VALUE ~ HHGRAD, data=homes)
HHGrad
homes$hhgrad
homes$HHGRAD
levels(homes$HHGRAD)
x = factor(homes$HHGRAD,levels(homes$HHGRAD)[c(5,4,1,2)])
plot(VALUE ~ x, data=homes)
x = factor(homes$HHGRAD,levels(homes$HHGRAD)[c(5,4,1,2,3)])
plot(VALUE ~ x, data=homes)
fdr_cut <- function(pvals, q, plotit=FALSE){
pvals <- pvals[!is.na(pvals)]
N <- length(pvals)
k <- rank(pvals, ties.method="min")
alpha <- max(pvals[ pvals<= (q*k/N) ])
if(plotit){
sig <- factor(pvals<=alpha)
o <- order(pvals)
plot(pvals[o], log="xy", col=c("grey60","red")[sig[o]], pch=20,
ylab="p-values", xlab="tests ordered by p-value", main = paste('FDR =',q))
lines(1:N, q*(1:N)/N)
}
return(alpha)
}
source('C:/Users/Eddie/Google Drive/Academics/Big Data/2/HW2/homes_start.R')
dev <- deviance(y, pred, family=fam)
fdr_cut <- function(pvals, q, plotit=FALSE){
pvals <- pvals[!is.na(pvals)]
N <- length(pvals)
fdr_cut <- function(pvals, q, plotit=FALSE){
pvals <- pvals[!is.na(pvals)]
N <- length(pvals)
k <- rank(pvals, ties.method="min")
alpha <- max(pvals[ pvals<= (q*k/N) ])
if(plotit){
sig <- factor(pvals<=alpha)
o <- order(pvals)
plot(pvals[o], log="xy", col=c("grey60","red")[sig[o]], pch=20,
ylab="p-values", xlab="tests ordered by p-value", main = paste('FDR =',q))
lines(1:N, q*(1:N)/N)
}
return(alpha)
}
fdr_cut <- function(pvals, q, plotit=FALSE){
pvals <- pvals[!is.na(pvals)]
N <- length(pvals)
k <- rank(pvals, ties.method="min")
alpha <- max(pvals[ pvals<= (q*k/N) ])
if(plotit){
sig <- factor(pvals<=alpha)
o <- order(pvals)
plot(pvals[o], log="xy", col=c("grey60","red")[sig[o]], pch=20,
ylab="p-values", xlab="tests ordered by p-value", main = paste('FDR =',q))
lines(1:N, q*(1:N)/N)
}
return(alpha)
}
quit
stop
stop()
